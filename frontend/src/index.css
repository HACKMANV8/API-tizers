@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 0 0% 4%;
    --foreground: 0 0% 98%;

    --card: 0 0% 8%;
    --card-foreground: 0 0% 98%;

    --popover: 0 0% 6%;
    --popover-foreground: 0 0% 98%;

    --primary: 189 100% 50%;
    --primary-foreground: 0 0% 10%;

    --secondary: 293 84% 58%;
    --secondary-foreground: 0 0% 98%;

    --muted: 217 33% 17%;
    --muted-foreground: 215 20% 65%;

    --accent: 189 100% 50%;
    --accent-foreground: 0 0% 10%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;

    --border: 217 33% 17%;
    --input: 217 33% 17%;
    --ring: 189 100% 50%;

    --radius: 0.75rem;

    /* Prism specific colors */
    --cyan: 189 100% 50%;
    --purple: 293 84% 58%;
    --surface: 0 0% 10%;
    --surface-light: 0 0% 15%;
    
    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(189 100% 50%), hsl(293 84% 58%));
    --gradient-glow: linear-gradient(135deg, hsl(189 100% 50% / 0.2), hsl(293 84% 58% / 0.2));
    
    /* Shadows */
    --glow-cyan: 0 0 20px hsl(189 100% 50% / 0.5);
    --glow-purple: 0 0 20px hsl(293 84% 58% / 0.5);
  }
}

/* Prism animations */
@keyframes float {
  0%, 100% { transform: translateY(0px) translateX(0px) rotate(0deg); }
  33% { transform: translateY(-20px) translateX(10px) rotate(2deg); }
  66% { transform: translateY(-10px) translateX(-10px) rotate(-2deg); }
}

@keyframes twinkle {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 1; }
}

@keyframes gradient-shift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

@keyframes fade-in {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes scale-in {
  from { opacity: 0; transform: scale(0.9); }
  to { opacity: 1; transform: scale(1); }
}

@keyframes cube-float {
  0%, 100% { transform: translateY(0px) rotateX(0deg) rotateY(0deg); }
  33% { transform: translateY(-15px) rotateX(5deg) rotateY(5deg); }
  66% { transform: translateY(-8px) rotateX(-5deg) rotateY(-5deg); }
}

@keyframes glow-pulse {
  0%, 100% { box-shadow: 0 0 20px hsl(189 100% 50% / 0.3), 0 0 40px hsl(293 84% 58% / 0.2); }
  50% { box-shadow: 0 0 30px hsl(189 100% 50% / 0.5), 0 0 60px hsl(293 84% 58% / 0.4); }
}

/* Glassmorphic styles */
.glass-card {
  background: linear-gradient(135deg, hsl(0 0% 10% / 0.8), hsl(0 0% 8% / 0.6));
  backdrop-filter: blur(10px);
  border: 1px solid hsl(0 0% 100% / 0.1);
  box-shadow: 0 8px 32px 0 hsl(0 0% 0% / 0.37);
}

.glass-card-hover {
  transition: all 0.3s ease;
}

.glass-card-hover:hover {
  border-color: hsl(189 100% 50% / 0.3);
  box-shadow: 0 8px 32px 0 hsl(189 100% 50% / 0.2);
}

/* Gradient button */
.btn-gradient {
  background: linear-gradient(135deg, hsl(189 100% 50%), hsl(293 84% 58%));
  background-size: 200% 200%;
  animation: gradient-shift 3s ease infinite;
  position: relative;
  overflow: hidden;
}

.btn-gradient::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, transparent, hsl(0 0% 100% / 0.2), transparent);
  transform: translateX(-100%);
  transition: transform 0.6s;
}

.btn-gradient:hover::before {
  transform: translateX(100%);
}

/* Utility animations */
.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-cube-float {
  animation: cube-float 8s ease-in-out infinite;
}

.animate-fade-in {
  animation: fade-in 0.8s ease-out forwards;
}

.animate-scale-in {
  animation: scale-in 0.6s ease-out forwards;
}

.animate-glow-pulse {
  animation: glow-pulse 3s ease-in-out infinite;
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}
