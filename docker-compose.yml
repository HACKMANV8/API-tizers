version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: prism-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: prism_user
      POSTGRES_PASSWORD: prism_password
      POSTGRES_DB: prism_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prism_user -d prism_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: prism-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: prism-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://prism_user:prism_password@db:5432/prism_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      WORKER_ENABLED: "true"
      WORKER_INTERVAL_MS: "300000"
      ADMIN_API_KEY: admin-secret-key-change-this
      LEADERBOARD_CACHE_TTL: "300"
      LEADERBOARD_DEFAULT_LIMIT: "50"
      LOG_LEVEL: info
    ports:
      - "3002:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: prism-frontend
    restart: unless-stopped
    ports:
      - "3001:80"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:3002/api

volumes:
  postgres_data:
  redis_data:
